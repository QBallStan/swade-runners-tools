{"name":"Boost/Lower Trait","type":"script","author":"oOgyEd3SmzCGqEcz","img":"modules/swade-tools/icons/macro-boost-lower.png","scope":"global","command":"const attrlang={\n        agility: \"AttrAgi\",\n        spirit:\"AttrSpr\",\n        strength: \"AttrStr\",\n        smarts:  \"AttrSma\",\n        vigor: \"AttrVig\"\n    }\n    \n    const attributes=['agility','smarts','spirit','strength','vigor']\n    \n    let tokens=canvas.tokens.controlled;\n        if (tokens.length<1){\n            ui.notifications.warn(game.i18n.localize('SWADETOOLS.NoTokenSelected'))\n        } else {\n        let skillList=[]\n        let content=`<div class=\"swadetools-formpart\">\n        <div class=\"swadetools-mod-add\"><label>${game.i18n.localize('SWADE.Trait')} </label> <select id=\"trait\">`;\n    \n        content+=`<optgroup label=\"${game.i18n.localize('SWADE.Attributes')}\">`;\n        attributes.map(att=>{\n            content+=`<option value=\"att-${att}\">${game.i18n.localize('SWADE.'+attrlang[att])}</option>`;\n        })\n    \n        content+=`</optgroup>\n        <optgroup label=\"${game.i18n.localize('SWADE.Skills')}\">`\n    \n    \n       // gb.log(tokens);\n    \n        tokens.map(token=>{\n            token.actor.data.items.filter(el=>el.data.type=='skill').map(skill=>{\n                    if (!skillList.includes(skill.name)){\n                    content+=`<option value=\"skl-${skill.name}\">${skill.name}</option>`;\n                    skillList.push(skill.name);\n                    }\n                }\n            )\n            \n            \n        })\n    \n    \n    \n    \n        content+=`</optgroup></select></div>\n        <div class=\"swadetools-mod-add\"><label>${game.i18n.localize('SWADETOOLS.DieSteps')} <i class=\"far fa-question-circle swadetools-hint\" title=\"${game.i18n.localize('SWADETOOLS.BoostLowerHint')}\"></i></label> <input type=\"number\" id=\"diesteps\"></div>\n        <div class=\"swadetools-mod-add\"><label>${game.i18n.localize('SWADE.Dur')} (${game.i18n.localize('SWADETOOLS.Rounds')}) <i class=\"far fa-question-circle swadetools-hint\" title=\"${game.i18n.localize('SWADETOOLS.DurationHint')}\"></i></label> <input type=\"number\" id=\"duration\"></div></div>`;\n    \n        new Dialog({\n            title: \"Boost/Lower Trait\",\n            content: content,\n            buttons: {\n                ok: {\n                    label: `<i class=\"fas fa-check\"></i> ${game.i18n.localize('SWADE.Ok')}`,\n                    callback: (html)=>{\n                    \n                        let val=html.find('#trait')[0].value\n                        let name=val.slice(4);\n                        let type=val.slice(0,4);\n                        let steps=html.find('#diesteps')[0].value\n                        let dur=parseInt(html.find('#duration')[0].value) || 0\n                        let boost=true;\n                        if (steps<0){\n                            boost=false;\n                        }\n\n                        steps=Math.abs(steps);\n    \n                      //  gb.log(val,name,type);\n                            let att=false;\n                            if (type=='att-'){\n                            att=true;\n                            } /* else if (type=='uns-'){\n                            name='';\n                            } */\n                        \n                        if (steps){\n                        tokens.map(t=>{\n    \n                            let odie;\n                            let addsteps=0;\n                            let addmod=0;\n                            let data ={}\n                            let key\n                            let keymod\n                            let finalname\n                            let createskill=false;\n                            \n                            let sign='+'\n\n                            if (att){\n                                odie=t.actor.data.data.attributes[name].die.sides\n                                key=\"data.attributes.\"+name+\".die.sides\"\n                                keymod=\"data.attributes.\"+name+\".die.modifier\"\n                                finalname=game.i18n.localize('SWADE.'+attrlang[name])\n                            } else {\n                               // gb.log(t.actor);\n                              //  gb.log(t.actor.items.find(el=>el.type==\"skill\" && el.name==name))\n                                odie=t.actor.items.find(el=>el.type==\"skill\" && el.name==name)?.data?.data?.die?.sides\n                                finalname=name\n                                if (odie===undefined){ /// actor doesnt have the skill\n                                    \n\n                                    if (boost){\n\n                                        //add skill as d4\n                                       \n                                        odie=2\n                                        createskill=true;\n                                        ui.notifications.warn(`${finalname} ${game.i18n.localize('SWADETOOLS.BoostSkill')} ${t.actor.name} (${game.i18n.localize('SWADETOOLS.NoSkill')}). ${game.i18n.localize('SWADETOOLS.DeleteManually')}.`)\n\n                                    } else {\n                                        /// ignore\n                                        steps=0;\n                                        ui.notifications.warn(`${finalname} ${game.i18n.localize('SWADETOOLS.LowerSkillIgnored')} ${t.actor.name} (${game.i18n.localize('SWADETOOLS.NoSkill')})`)\n                                    }\n\n                                   \n                                }\n                                key=`@Skill{${name}}[data.die.sides]`\n                                keymod=`@Skill{${name}}[data.die.modifier]`\n                               \n                            }\n                            let mode=2;\n                            let finalsteps=steps;\n                            \n    \n                            for (let i=1;i<=steps;i++){\n\n                                if (boost){\n                                    data.icon='modules/swade-tools/icons/boost-trait.png'\n                                    \n                                    if (odie==12){\n                                        addmod++\n                                    } else {\n                                        odie+=2\n                                        addsteps+=2\n                                    }\n                                } else { ///lower\n\n                                    data.icon='modules/swade-tools/icons/lower-trait.png'\n\n                                    sign='-'\n                                   // mode=3\n                                    if (odie==4){    \n                                        finalsteps=i-1                                    \n                                        ui.notifications.warn(`${t.actor.name} ${game.i18n.localize('SWADETOOLS.NotBelowd4')} (${finalname})`)\n                                        break;\n                                    } else {\n                                        odie-=2\n                                        addsteps-=2\n                                    }\n                                }\n                               \n                            }\n\n                           // data.icon=\"/icons/svg/mystery-man.svg\"\n                            \n                           if (finalsteps>0){\n                            \n\n                          //  gb.log(data);\n                           // data.changes.push()\n                           \n                         //   let ae=[{data}];\n                           // ae.push(data);\n\n                           if (createskill){\n                            let itemdata={\n                                name: `${name} [${game.i18n.localize('SWADETOOLS.BoostMark')}]`,\n                                img: 'modules/swade-tools/icons/boost-trait.png',\n                                type: 'skill',\n                                data: {\n                                    die: {\n                                        sides: 4\n                                    }\n                                }\n                            }\n\n                            if (addsteps){\n                                itemdata.data.die.sides=2+addsteps\n                            }\n\n                            if (addmod){\n                                itemdata.data.die.modifier=addmod;\n                            }\n\n                            \n\n                            t.actor.createEmbeddedDocuments('Item',[itemdata],{renderSheet:null});\n                           } else {\n\n                            data.label=`${finalname} (${sign}${finalsteps}d)`;\n                            if (dur){\n                                data.duration={rounds:dur}\n                            }     \n                            data.changes=[];      \n                            if (addsteps){\n                                data.changes.push({\n                                    key:key,\n                                    mode: mode,\n                                    value: addsteps\n                                })\n                            }                 \n                            \n                            if (addmod){\n                                data.changes.push({\n                                    key: keymod,\n                                    mode: mode,\n                                    value: addmod\n                                })\n                            }\n\n                            data.flags={swade:{expiration:2,loseTurnOnHold:false}}// Automatic, at end of turn\n\n                            t.actor.createEmbeddedDocuments('ActiveEffect',[data]);\n                           }\n\n                           \n                          //  let ae=new ActiveEffect\n                          //  ae.create(data,{parent:t.actor})\n                            }\n                            \n    \n                        })\n                    }\n                    }\n                }\n\n                \n    \n                \n            },\n            default: 'ok'\n        }).render(true);\n        \n    \n    }","folder":null,"sort":0,"permission":{"default":0,"oOgyEd3SmzCGqEcz":3},"flags":{"core":{"sourceId":"Macro.IALReHyUhEeUOTsW"}},"_id":"87yjIHK7Zk1hWz2P"}
{"name":"Attack","type":"script","flags":{"core":{"sourceId":"Macro.ZX5N6znOIlQ4Sxlf"}},"scope":"global","command":"/// Macro to start attack sequence - shows quick list of weapons/powers for actor and roll main skill\nlet actoratc=canvas.tokens.controlled[0]?.actor\n\n\nlet swadeTools=game.modules.get('swade-tools')\nlet br2=game.modules.get('betterrolls-swade2')\n\nif (!swadeTools.active && ! br2.active) {\n  ui.notifications.warn(\"Integration modules not active neither SwadeTools nor Better Rolls 2 loaded and active\")\n}\nelse {\n//let swadeTools=false\nif (!actoratc){\n    ui.notifications.warn(swadeTools.active?game.i18n.localize('SWADETOOLS.NoActorFound'):'NoSelectedActor');\n    \n} else {\n\n    let items=actoratc.items.filter(el=>(el.type==\"power\" || ( el.type==\"weapon\" && el.system.equipStatus>2)));\n\n    if (!items.length){\n\n        ui.notifications.warn(swadeTools.active?game.i18n.localize('SWADETOOLS.NoItemEquipped'):'NoEquippedItemOrPower');\n    } else {\nlet buttons={}\n\nlet content=`<label style=\"font-size:14px;display:flex;align-items:center;margin-bottom: 5px;\">\n</label>`\nif(swadeTools.active) {\n  content = `<label style=\"font-size:14px;display:flex;align-items:center;margin-bottom: 5px;\"><input type=\"checkbox\" style=\"margin:0;vertical-align:middle;margin-right: 3px;\" id=\"showmore\"/> ${game.i18n.localize('SWADETOOLS.ShowDialogCheck')}</label>`\n}\n\n\n\nitems.map((item)=>{\n    buttons[item.id]={\n        label: item.name,\n        callback: (html)=>{\n            let dialog=false;\n            if(swadeTools.active) {\n            if (html.find(\"#showmore\")[0].checked){\n                dialog=true;\n            } \n            game.swade.swadetoolsAttack(actoratc,item,dialog)\n} \nelse {  game.brsw.create_item_card(actoratc,item.id,true)\n}\n        }\n    }\n})\n\n\nnew Dialog({\n    title: actoratc.name+': '+game.i18n.localize(\"SWADE.QuickAccess\"),\n    content: content,\n    buttons: buttons,\nclasses: 'horizontal-dialog'\n},{classes:[\"vertical-buttons\"]}).render(true);\n    }\n}\n}","author":"lUyIFoEURZA7o1zQ","img":"modules/swade-tools/icons/macro-attack.png","_id":"eYQOyUVzPFEh0Qe5","ownership":{"default":0,"lUyIFoEURZA7o1zQ":3},"folder":null,"sort":0,"_stats":{"systemId":"swade","systemVersion":"2.0.4","coreVersion":"10.285","createdTime":null,"modifiedTime":1664997758516,"lastModifiedBy":"QstChKQ47hTokDdn"}}
{"name":"PC Friendly / NPC Hostile","type":"script","author":"y2AqZ4TOZ3XmJRVR","img":"modules/swade-tools/icons/macro-disposition.png","scope":"global","command":"new Dialog({\n    title: 'PC Friendly / NPC Hostile',\n    content: `<p>${game.i18n.localize('SWADETOOLS.FriendlyPCMacroQuestion')}</p>`,\n    buttons: {\n        cancel: {\n            label: `<i class=\"fas fa-times\"></i> ${game.i18n.localize('SWADE.No')}`,\n            callback: ()=>{\n               \n            }\n        },\n        ok: {\n            label: `<i class=\"fas fa-check\"></i> ${game.i18n.localize('SWADE.Yes')}`,\n            callback: ()=>{\n                game.actors.forEach(actor=>{\n                    if (actor.data.type=='character'){\n                        actor.update({'token.disposition':1})\n                    } else if (actor.data.type=='npc'){\n                        actor.update({'token.disposition':-1})\n                    }\n                })\n\n                let chatData = {\n                    user: game.user._id,\n                    speaker:ChatMessage.getSpeaker(),\n                  content: `${game.i18n.localize('SWADETOOLS.FriendlyPCMacroOk')}`,\n               \n                };\n            \n                /* let chat=new ChatMessage();\n                chat.render(false,) */\n                return ChatMessage.create(chatData, {});\n\n            }\n        }\n\n        \n    }\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"y2AqZ4TOZ3XmJRVR":3},"flags":{"core":{"sourceId":"Macro.rJwLuJ2kQ1ZlFnJ2"}},"_id":"fYmdmESTwlns2lCM"}
{"_id":"piWqfcNbrqVjmZGF","name":"Roll From Selected","type":"script","author":"oOgyEd3SmzCGqEcz","img":"modules/swade-tools/icons/macro-selected.png","scope":"global","command":"const attrlang={\n    agility: \"AttrAgi\",\n    spirit:\"AttrSpr\",\n    strength: \"AttrStr\",\n    smarts:  \"AttrSma\",\n    vigor: \"AttrVig\"\n}\n\nconst attributes=['agility','smarts','spirit','strength','vigor']\n\nlet tokens=canvas.tokens.controlled;\n    if (tokens.length<1){\n        ui.notifications.warn(game.i18n.localize('SWADETOOLS.NoTokenSelected'))\n    } else {\n    let skillList=[]\n    let content=`<div class=\"swadetools-formpart\"><div class=\"swadetools-mod-add\"><label>${game.i18n.localize('SWADE.Trait')} </label> <select id=\"trait\">`;\n\n    content+=`<optgroup label=\"${game.i18n.localize('SWADE.Attributes')}\">`;\n    attributes.map(att=>{\n        content+=`<option value=\"att-${att}\">${game.i18n.localize('SWADE.'+attrlang[att])}</option>`;\n    })\n\n    content+=`</optgroup>\n    <optgroup label=\"${game.i18n.localize('SWADE.Skills')}\">`\n\n\n   // gb.log(tokens);\n\n    tokens.map(token=>{\n        token.actor.data.items.filter(el=>el.data.type=='skill').map(skill=>{\n                if (!skillList.includes(skill.name)){\n                content+=`<option value=\"skl-${skill.name}\">${skill.name}</option>`;\n                skillList.push(skill.name);\n                }\n            }\n        )\n        \n        \n    })\n\n\n\n\n    content+=`<option value=\"uns-unskilled\">${game.i18n.localize('SWADETOOLS.OtherUnskilled')}</option></select></optgroup></div>\n    <div class=\"swadetools-mod-add\"><label>${game.i18n.localize('SWADETOOLS.Modifier')} <i class=\"far fa-question-circle swadetools-hint\" title=\"${game.i18n.localize('SWADETOOLS.ModHint')}\"></i></label> <input type=\"text\" id=\"mod\"></div></div>`;\n\n    new Dialog({\n        title: \"Roll from Selected\",\n        content: content,\n        buttons: {\n            ok: {\n                label: `<i class=\"fas fa-dice\"></i> ${game.i18n.localize('SWADE.Roll')}`,\n                callback: (html)=>{\n                \n                    let val=html.find('#trait')[0].value\n                    let name=val.slice(4);\n                    let type=val.slice(0,4);\n                    let mod=html.find('#mod')[0].value\n\n                  //  gb.log(val,name,type);\n                        let att=false;\n                        if (type=='att-'){\n                        att=true;\n                        } else if (type=='uns-'){\n                        name='';\n                        }\n                    \n                    tokens.map(t=>{\n\n                        game.swade.swadetoolsRollTrait(t.actor,name,mod,att)\n\n                        \n\n                    })\n                }\n            }\n\n            \n        },\n        default: 'ok'\n    }).render(true);\n\n}","folder":null,"sort":0,"permission":{"default":0,"oOgyEd3SmzCGqEcz":3},"flags":{"core":{"sourceId":"Macro.br9hAWVjF1uGKLvN"}}}
